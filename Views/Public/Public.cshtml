@{
    ViewBag.Title = "Transpo Jo - Public Bus Route";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDbLyZgSVr4OCN-UPn_Aa5YOSi8OgZjZ70&libraries=places&callback=initMap" async defer></script>
    <link href="~/css/publiccss.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <h1 class="text-center my-5">🚌 Transpo Jo - Bus Route</h1>

        <div class="row mb-4">
            <div class="col-md-6 offset-md-3">
                <input type="text" id="destination" class="form-control form-control-lg" placeholder="Enter destination or click on map" />
                <button id="route-button" class="btn btn-primary w-100 custom-btn mt-3" onclick="handleRouteButtonClick()">🚌 Show Bus Route</button>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-10 offset-lg-1">
                <div class="info-box">
                    <div class="trip-header">🧭 Trip Summary</div>
                    <div id="steps-info"></div>
                    <hr />
                    <p class="mb-1"><strong>Total Distance:</strong> <span class="highlight-distance" id="total-distance">0 km</span></p>
                    <p><strong>Total Cost:</strong> <span class="highlight-cost" id="total-cost">0 JD</span></p>
                </div>
            </div>
        </div>

        <div id="map" class="mt-5" style="height: 500px;"></div>
    </div>

    <script>
        let map, currentLocation, destinationLocation, currentMarker, destinationMarker, SecondMarker, ThiredMarker, ForthMarker;
        let directionsService;
        let polylines = [];
        let routeShown = false;

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 31.9784, lng: 35.9042 },
                zoom: 13
            });

            directionsService = new google.maps.DirectionsService();

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(pos => {
                    currentLocation = {
                        latitude: pos.coords.latitude,
                        longitude: pos.coords.longitude
                    };
                    currentMarker = new google.maps.Marker({
                        position: { lat: currentLocation.latitude, lng: currentLocation.longitude },
                        map,
                        icon: "https://maps.google.com/mapfiles/kml/shapes/man.png",
                        title: "Your Location"
                    });
                    map.setCenter(currentMarker.getPosition());
                });
            }

            const input = document.getElementById("destination");
            const autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.addListener("place_changed", () => {
                const place = autocomplete.getPlace();
                if (place.geometry) {
                    const loc = place.geometry.location;
                    destinationLocation = { latitude: loc.lat(), longitude: loc.lng() };

                    if (destinationMarker) destinationMarker.setMap(null);
                    destinationMarker = new google.maps.Marker({
                        position: loc,
                        map,
                        icon: "https://maps.google.com/mapfiles/ms/icons/red-dot.png",
                        title: "Destination"
                    });

                    map.setCenter(loc);
                }
            });

            map.addListener("click", (e) => {
                setDestinationFromClick(e.latLng);
            });
        }

        function setDestinationFromClick(latLng) {
            destinationLocation = {
                latitude: latLng.lat(),
                longitude: latLng.lng()
            };

            if (destinationMarker) destinationMarker.setMap(null);
            destinationMarker = new google.maps.Marker({
                position: latLng,
                map,
                icon: "https://maps.google.com/mapfiles/ms/icons/red-dot.png",
                title: "Destination"
            });

            document.getElementById("destination").value = `Lat: ${latLng.lat().toFixed(5)}, Lng: ${latLng.lng().toFixed(5)}`;
        }

        function handleRouteButtonClick() {
            if (!routeShown) {
                getBusRoute();
            } else {
                resetRoute();
            }
        }

        async function getBusRoute() {
            if (!currentLocation || !destinationLocation) {
                alert("Please select both your location and destination.");
                return;
            }

            try {
                const response = await fetch("http://localhost:5139/api/route/find-best", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                        currentLocation,
                        destination: destinationLocation
                    })
                });

                const data = await response.json();
                console.log("Bus route result:", data);

                if (!data || !data.tripSummaryText) {
                    document.getElementById("steps-info").innerHTML =
                        '<div class="step-info text-danger">❌ No bus route found.</div>';
                    return;
                }

                data.allRoutes.forEach((route, index) => {
                    let color;
                    switch (route.type) {
                        case "Taxi":
                            color = "#43A047"; break;
                        case "Bus":
                            color = "#1E88E5"; break;
                        case "Walk":
                            color = "#FB8C00"; break;
                        default:
                            color = "#9E9E9E";
                    }
                    drawRoute(route.start, route.end, color);

                    if (index == 1) {
                        SecondMarker = addMarker(route.start, "blue-dot.png", "Bus Station");
                    } else if (index == 2) {
                        ThiredMarker = addMarker(route.start, "blue-dot.png", "Bus Station");
                    } else if (index == 3) {
                        ForthMarker = addMarker(route.start, "blue-dot.png", "Bus Station");
                    }
                });

                document.getElementById("steps-info").innerHTML =
                    `<div class="step-info">${data.tripSummaryText.replace(/\n/g, "<br/>")}</div>`;
                document.getElementById("total-distance").innerText = `${data.totalDistance} km`;
                document.getElementById("total-cost").innerText = `${data.totalCost} JD`;

                document.getElementById("route-button").innerText = "🔄 Reset";
                routeShown = true;

            } catch (err) {
                console.error("Error fetching route:", err);
                alert("An error occurred while calculating the route.");
            }
        }

        function resetRoute() {
            polylines.forEach(p => p.setMap(null));
            polylines = [];

            if (SecondMarker) SecondMarker.setMap(null);
            if (ThiredMarker) ThiredMarker.setMap(null);
            if (ForthMarker) ForthMarker.setMap(null);

            SecondMarker = ThiredMarker = ForthMarker = null;

            if (destinationMarker) destinationMarker.setMap(null);
            destinationMarker = null;

            destinationLocation = null;

            document.getElementById("destination").value = "";
            document.getElementById("steps-info").innerHTML = "";
            document.getElementById("total-distance").innerText = "0 km";
            document.getElementById("total-cost").innerText = "0 JD";

            document.getElementById("route-button").innerText = "🚌 Show Bus Route";
            routeShown = false;
        }

        function drawPolyline(points, color) {
            const path = points.map(p => ({ lat: p.latitude, lng: p.longitude }));
            const polyline = new google.maps.Polyline({
                path,
                geodesic: true,
                strokeColor: color,
                strokeOpacity: 0.8,
                strokeWeight: 5
            });
            polyline.setMap(map);
            return polyline;
        }

        function drawRoute(start, end, color) {
            directionsService.route({
                origin: { lat: start.latitude, lng: start.longitude },
                destination: { lat: end.latitude, lng: end.longitude },
                travelMode: google.maps.TravelMode.DRIVING
            }, (result, status) => {
                if (status === "OK") {
                    const path = result.routes[0].overview_path;
                    const polyline = new google.maps.Polyline({
                        path,
                        strokeColor: color,
                        strokeOpacity: 1.0,
                        strokeWeight: 4,
                        map
                    });
                    polylines.push(polyline);
                } else {
                    alert("Directions request failed due to " + status);
                }
            });
        }

        function addMarker(coord, iconColor, title) {
            return new google.maps.Marker({
                position: { lat: coord.latitude, lng: coord.longitude },
                map,
                icon: `https://maps.google.com/mapfiles/ms/icons/${iconColor}`,
                title
            });
        }
    </script>
</body>
</html>
